<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ca.trentonadams.maven.plugins</groupId>
  <artifactId>maven-rmi-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <version>0.1.2-SNAPSHOT</version>
  <name>maven-rmi-plugin Maven Mojo</name>
  <url>http://maven.apache.org</url>

  <scm>
    <connection>scm:git:git@github.com:TrentonAdams/maven-rmi-plugin.git</connection>
    <developerConnection>scm:git:git@github.com:TrentonAdams/maven-rmi-plugin.git</developerConnection>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>2.0.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.5</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <configuration>
              <source>1.5</source>
              <quiet>true</quiet>
            </configuration>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <!-- Release profile generates javadoc, sources, etc-->
          <arguments>-P production,release</arguments>
          <useReleaseProfile>false</useReleaseProfile>
        </configuration>
      </plugin>
      <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-source-plugin</artifactId>
        <version>2.1.2</version>
         <executions>
           <execution>
             <id>attach-sources</id>
             <goals>
               <goal>jar</goal>
             </goals>
           </execution>
         </executions>
      </plugin>
      <plugin>
        <groupId>ca.trentonadams.maven.plugins</groupId>
        <artifactId>maven-rmi-plugin</artifactId>
        <version>0.1.2-SNAPSHOT</version>
        <executions>
          <execution>
            <goals>
              <goal>rmi</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!--
          Fork the processes and exit.  The rmiregistry and java
          processes will continue running in the background.
           -->
          <fork>false</fork>
          <rmiServerClass>ca.trentonadams.maven.plugins.rmi.ExampleServer
          </rmiServerClass>
          <codebase>${basedir}/target/${project.artifactId}-${project.version}.jar</codebase>          
          <!--
          Provide extra runtime class path options for running the java rmi
          process
          -->
          <!--<extraClasspath>${basedir}/target/resources_somewhere</extraClasspath>-->
          <verify>
            <!-- method to call for rmi startup verification -->
            <param>getHello</param>
            <!-- Expected "String" return value from method -->
            <param>Hello World!!!</param>
            <!-- bind name of your rmi server -->
            <param>testrmi</param>
          </verify>
          <registryPort>1199</registryPort>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
